#####################################################################
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
#####################################################################

Description: >
  Use this template to get started with Amazon S3 Object Lambda and automate the setup process.
  This template creates relevant resources, configures IAM roles, and sets up a Lambda function that handles requests
  through an S3 Object Lambda Access Point. You can implement best practices, improve your security posture,
  reduce errors caused by manual processes, and focus on innovation and implementing business logic
  instead of managing the setup process.

Mappings:
  LambdaRuntimeHandlerMapping:
    nodejs20.x:
      handler: s3objectlambda.handler
    python3.9:
      handler: s3objectlambda.handler
    java17:
      handler: com.example.s3objectlambda.Handler::handleRequest

Parameters:
  # Os parâmetros a seguir foram mantidos, pois dependem de valores de deployment (upload do código).
  LambdaFunctionS3BucketName:
    Type: String
    Description: >
      Name of the Amazon S3 bucket where you have uploaded the Lambda function deployment package.
  
  LambdaFunctionS3Key:
    Type: String
    Description: The Amazon S3 key of the Lambda function deployment package.

  LambdaFunctionS3ObjectVersion:
    Type: String
    Description: The version id of the Lambda function deployment package object stored in Amazon S3.

  LambdaFunctionPayload:
    Type: String
    Default: ""
    Description: An optional static payload that provides supplemental data to the Lambda function used to transform objects.

  LambdaFunctionRuntime:
    Type: String
    AllowedValues: [ nodejs20.x, python3.9, java17 ]
    Default: python3.9
    Description: Identifier for the Lambda function runtime

  CreateNewSupportingAccessPoint:
    Type: String
    Description: Flag that indicates a new supporting Access Point should be created.
    Default: true
    AllowedValues: [true, false]

  EnableCloudWatchMonitoring:
    Type: String
    Description: >
      Flag to enable CloudWatch request metrics from S3 Object Lambda. This also creates CloudWatch alarms
      to monitor the request metrics.
    Default: true
    AllowedValues: [ true, false ]

Conditions:
  ShouldCreateNewSupportingAccessPoint: !Equals [!Ref CreateNewSupportingAccessPoint, true]
  ShouldEnableMonitoring: !Equals [!Ref EnableCloudWatchMonitoring, true]

Resources:
  ObjectLambdaAccessPoint:
    Type: AWS::S3ObjectLambda::AccessPoint
    Properties:
      # O nome foi fixado: objectlambda-jullia
      Name: objectlambda-jullia
      ObjectLambdaConfiguration:
        # Se um novo AP de Suporte não for criado, o nome fixo é usado para construir o ARN.
        SupportingAccessPoint:
          !If
            - ShouldCreateNewSupportingAccessPoint
            - !GetAtt SupportingAccessPoint.Arn
            - !Sub "arn:${AWS::Partition}:s3:${AWS::Region}:${AWS::AccountId}:accesspoint/supporting-ap-jullia"
        AllowedFeatures:
          - GetObject-Range
          - GetObject-PartNumber
          - HeadObject-Range
          - HeadObject-PartNumber
        CloudWatchMetricsEnabled: !Ref EnableCloudWatchMonitoring
        TransformationConfigurations:
          - Actions: [ GetObject, ListObjects, ListObjectsV2, HeadObject ]
            ContentTransformation:
              AwsLambda:
                FunctionArn: !GetAtt LambdaFunction.Arn
                FunctionPayload: !Ref LambdaFunctionPayload

  SupportingAccessPoint:
    Type: AWS::S3::AccessPoint
    Condition: ShouldCreateNewSupportingAccessPoint
    Properties:
      # O Bucket de suporte foi fixado: bucket-automacao-jullia
      Bucket: bucket-automacao-jullia
      # O nome do AP de Suporte foi fixado: supporting-ap-jullia
      Name: supporting-ap-jullia

  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      ManagedPolicyArns: ["arn:aws:iam::aws:policy/service-role/AmazonS3ObjectLambdaExecutionRolePolicy"]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Tags:
        - Key: "CreatedBy"
          Value: "S3 Object Lambda Default Configuration"

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      # Propriedade corrigida para FunctionName e nome fixado: lambda-automacao
      FunctionName: lambda-automacao
      Code:
        # O Bucket S3 para o código Lambda foi fixado: bucket-automacao-jullia.
        # Note: Este bucket é tipicamente onde você carrega o ZIP da função.
        S3Bucket: bucket-automacao-jullia
        S3Key: lambda-key.zip
      # Corrigida a sintaxe do FindInMap
      Handler: !FindInMap [LambdaRuntimeHandlerMapping, !Ref LambdaFunctionRuntime, handler]
      MemorySize: 1024
      Timeout: 60
      PackageType: Zip
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: !Ref LambdaFunctionRuntime
      Tags:
        - Key: "CreatedBy"
          Value: "S3 Object Lambda Default Configuration"

  ClientSideErrorsAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: ShouldEnableMonitoring
    Properties:
      AlarmDescription: Indicates that there are client-side errors (HTTP 4xx errors) returned by the S3 Object Lambda Access Point.
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: AccessPointName
          Value: !Ref ObjectLambdaAccessPoint
        - Name: LambdaARN
          Value: !GetAtt LambdaFunction.Arn
      MetricName: 4xxErrors
      Namespace: "AWS/S3ObjectLambda"
      EvaluationPeriods: 5
      Period: 60 # 1 minute
      Statistic: Average
      Threshold: 0.01 # Goes into alarm when there are more than 1% of requests resulting in client-side errors
      TreatMissingData: notBreaching

  ServerSideErrorsAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: ShouldEnableMonitoring
    Properties:
      AlarmDescription: Indicates that there are server-side errors (HTTP 5xx errors) returned by the S3 Object Lambda Access Point.
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: AccessPointName
          Value: !Ref ObjectLambdaAccessPoint
        - Name: LambdaARN
          Value: !GetAtt LambdaFunction.Arn
      MetricName: 5xxErrors
      Namespace: "AWS/S3ObjectLambda"
      EvaluationPeriods: 5
      Period: 60
      Statistic: Average
      Threshold: 0.01
      TreatMissingData: notBreaching

Outputs:
  ObjectLambdaAccessPoint:
    Description: The Amazon S3 Object Lambda Access Point created by this CloudFormation stack.
    Value: !Ref ObjectLambdaAccessPoint